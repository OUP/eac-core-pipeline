AWSTemplateFormatVersion: 2010-09-09

Parameters:
  GitHubRepositoryName:
    Description: GitHub repository name
    Type: String
    Default: eac-core-pipeline
  GitHubBranchName:
    Description: Github Branch name
    Type: String
    Default: infra
  GitHubRepositoryOwner:
    Type: String
    Default: OUP
  CodeStarConnectionARN:
    Type: String
    Description: ARN of the CodeStar connection used to connect to GitHub
  SourceBucket:
    Type: String
    Default: eac-core-cloudformation
  UpstreamStack:
    Type: String
  Environment:
      Type: String
      AllowedValues:
        - infra
        - dev
        - test
        - uat
        - perf
        - preprod
        - prod
  PipelineName:
    Type: String
    Default: CoreBuilder
  CodeBuildVPC: 
    Type: AWS::EC2::VPC::Id
    Default: vpc-0059fd92000eaae5d
  CodeBuildSubnet:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-03452a3f41c4f34fc
  CodeBuildSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-0346bf91a376ef7bb
  GoldenAMIPipeline:
      Type: String
      Description: Golden AMI Pipeline Name

Resources:

  Artifacts:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Delete

  AppBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: SourceBucket
            Value: !Ref SourceBucket
      Source:
        BuildSpec: buildspec.yml
        Type: CODEPIPELINE
      TimeoutInMinutes: 15
      Name: !Sub ${PipelineName}_${Environment}_appbuild
      VpcConfig:
        SecurityGroupIds: 
          - !Ref CodeBuildSecurityGroup
        Subnets: 
          - !Ref CodeBuildSubnet
        VpcId: !Ref CodeBuildVPC

  AMIBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: SourceBucket
            Value: !Ref SourceBucket
          - Name: ENVIRONMENT
            Value: !Ref Environment
          - Name: BUILD_VPC_ID
            Value: !Sub '{{resolve:ssm:/${UpstreamStack}/VPC:1}}'
          - Name: BUILD_SUBNET_ID
            Value: !Sub '{{resolve:ssm:/${UpstreamStack}/SubnetPrivA:1}}'
          - Name: UPSTREAMSTACK
            Value: !Ref UpstreamStack
          - Name: GOLDENAMIPIPELINE
            Value: !Ref GoldenAMIPipeline
      Source:
        BuildSpec: amibuild.yml
        Type: CODEPIPELINE
      TimeoutInMinutes: 15
      Name: !Sub ${PipelineName}_${Environment}_amibuild
      VpcConfig:
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroup
        Subnets:
          - !Ref CodeBuildSubnet
        VpcId: !Ref CodeBuildVPC

  MainCodePipeline:
      Type: AWS::CodePipeline::Pipeline
      Properties:
        Name: !Sub ${PipelineName}_${Environment}
        RoleArn: !GetAtt
          - CodePipelineServiceRole
          - Arn
        ArtifactStore:
          Type: S3
          Location: !Ref 'Artifacts'
        Stages:
          - Name: Source
            Actions:
              - Name: GitHubRepo
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: '1'
                Configuration:
                  ConnectionArn: !Ref CodeStarConnectionARN
                  FullRepositoryId: !Sub '${GitHubRepositoryOwner}/${GitHubRepositoryName}'
                  BranchName: !Ref GitHubBranchName
                  OutputArtifactFormat: "CODE_ZIP"
                  DetectChanges: True
                OutputArtifacts:
                  - Name: SourceArtifact
                RunOrder: 1
          - Name: AppBuild
            Actions:
              - Name: BuildAction
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: '1'
                  Provider: CodeBuild
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: BuildArtifact
                Configuration:
                  ProjectName: !Ref AppBuild
                RunOrder: 2
          - Name: AMIBuild
            Actions:
              - Name: BuildAction
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: '1'
                  Provider: CodeBuild
                InputArtifacts:
                  - Name: BuildArtifact
                Configuration:
                  ProjectName: !Ref AMIBuild
                RunOrder: 3

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - sns:Publish
                  - codebuild:*
                Effect: Allow
                Resource: '*'
        - PolicyName: !Sub '${PipelineName}-${Environment}-S3Policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
                - 
                  Action:
                    - 's3:GetBucketVersioning'
                    - 's3:DeleteBucketPolicy'
                    - 's3:GetObjectVersion'
                    - "s3:PutObjectAcl"
                    - 's3:PutObject'
                    - 's3:GetObject'
                  Effect: Allow
                  Resource: 
                    - !Sub 'arn:aws:s3:::${Artifacts}'
                    - !Sub 'arn:aws:s3:::${Artifacts}/*'
        - PolicyName: !Sub '${PipelineName}-${Environment}-PassCodebuild'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
                - 
                  Action: 'iam:PassRole'
                  Effect: Allow
                  Resource: !GetAtt CodeBuildServiceRole.Arn
        - PolicyName: !Sub '${PipelineName}-${Environment}-CodeStarPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
                - 
                  Action:
                    - 'codestar-connections:UseConnection'
                  Effect: Allow
                  Resource: 
                    - !Ref CodeStarConnectionARN
                  Condition: {"ForAllValues:StringEquals": {"codestar-connections:PassedToService": "codepipeline.amazonaws.com"}}

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/PowerUserAccess'
      AssumeRolePolicyDocument:
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codebuild.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ec2:CreateNetworkInterface
                  - ec2:CreateNetworkInterfacePermission
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                  # - iam:*
                  - codebuild:*
                  - codepipeline:*
                  - events:*
              - Resource: "*"
                Effect: Allow
                Action:
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:GetParametersByPath
              - Resource: !Sub arn:aws:s3:::${Artifacts}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Sub arn:aws:s3:::${SourceBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Sub arn:aws:s3:::${SourceBucket}
                Effect: Allow
                Action:
                  - s3:List*